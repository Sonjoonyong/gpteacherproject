<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sooaz.gpt.domain.mypage.learning.LearningMapper">

    <insert id="save">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select LEARNING_ID_SEQ.nextval from dual
        </selectKey>
        insert into LEARNING (
            id,
            user_id,
            learning_topic,
            <if test="learningTestType != null">
                learning_test_type,
            </if>
            learning_type,
            learning_date
        )
        values (
            #{id},
            #{userId},
            #{learningTopic},
            <if test="learningTestType != null">
                #{learningTestType},
            </if>
            #{learningType},
            #{learningDate, jdbcType = DATE}
        )
    </insert>

    <select id="findById" parameterType="long" resultType="Learning">
        select * from LEARNING where id = #{learningId} order by id desc
    </select>

    <select id="findByUserId" resultType="Learning">
        select * from LEARNING where user_id = #{userId}
        and (select count(id) from SENTENCE where learning_id = learning.id) != 0
        <if test="learningType != null">
            and learning_type = #{learningType}
        </if>
        <if test="onlyLike != null">
            and learning_like = #{onlyLike}
        </if>
        <trim prefix="ORDER BY">
            <if test='sortType == "id_asc"'> id asc</if>
            <if test='sortType == "id_desc"'> id desc</if>
        </trim>
    </select>

    <select id="findAll" resultType="Learning">
        select * from LEARNING
    </select>

    <select id="countByLearningDate" resultType="int">
        select count(id) from LEARNING where user_id = #{param1} and to_char(learning_date, 'yyyy-MM-dd') = #{param2}
    </select>

    <update id="update">
        update LEARNING
        <set>
            <if test="learningLike != null">
                learning_like = #{learningLike}
            </if>
        </set>
        where id = #{learningId}
    </update>

    <delete id="delete" parameterType="long">
        delete from LEARNING where id = #{learningId}
    </delete>

</mapper>